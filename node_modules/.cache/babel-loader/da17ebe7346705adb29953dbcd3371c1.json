{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport var songsApi = createApi({\n  reducerPath: \"songsApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://avagap.test/api\"\n  }),\n  endpoints: function endpoints(builder) {\n    return {\n      getSongs: builder.query({\n        //query: ({ offset, limit }) => `/v1/songs?offset=${offset}&limit=${limit}`\n        query: function query(_ref) {\n          var offset = _ref.offset,\n              limit = _ref.limit;\n          return \"\".concat(offset, \"&\").concat(limit);\n        },\n        queryFn: function queryFn(_ref2) {\n          var offset = _ref2.offset,\n              limit = _ref2.limit;\n          var list = [];\n\n          for (var i = +offset; i < +offset + limit; i++) {\n            list.push({\n              id: i.toString(),\n              name: \"Song \".concat(i)\n            });\n          }\n\n          console.log({\n            list: list\n          });\n          return {\n            data: {\n              total: 100,\n              list: list\n            }\n          };\n        }\n        /*\n        query: ({ offset, limit }) => ({\n          url: `/v1/Artist/5e5023646582e1286/tracks?maxSize=${limit}&offset=${offset}`,\n          headers: [[\"X-Api-Key\", \"4872bafc54269b2a7133705ab32c7e69\"]]\n        })\n        */\n\n      })\n    };\n  }\n});\nvar useGetSongsQuery = songsApi.useGetSongsQuery;\nexport { useGetSongsQuery };","map":{"version":3,"sources":["/home/hsn6/Desktop/scroll/src/songs.api.ts"],"names":["createApi","fetchBaseQuery","songsApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getSongs","query","offset","limit","queryFn","list","i","push","id","toString","name","console","log","data","total","useGetSongsQuery"],"mappings":"AAAA,SAEEA,SAFF,EAGEC,cAHF,QAIO,8BAJP;AAgBA,OAAO,IAAMC,QAAQ,GAAGF,SAAS,CAAC;AAChCG,EAAAA,WAAW,EAAE,UADmB;AAEhCC,EAAAA,SAAS,EAAEH,cAAc,CAAC;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAD,CAFO;AAGhCC,EAAAA,SAAS,EAAE,mBAACC,OAAD;AAAA,WAAc;AACvBC,MAAAA,QAAQ,EAAED,OAAO,CAACE,KAAR,CAA+D;AACvE;AACAA,QAAAA,KAAK,EAAE;AAAA,cAAGC,MAAH,QAAGA,MAAH;AAAA,cAAWC,KAAX,QAAWA,KAAX;AAAA,2BAA0BD,MAA1B,cAAoCC,KAApC;AAAA,SAFgE;AAGvEC,QAAAA,OAAO,EAAE,wBAAuB;AAAA,cAApBF,MAAoB,SAApBA,MAAoB;AAAA,cAAZC,KAAY,SAAZA,KAAY;AAC9B,cAAIE,IAAY,GAAG,EAAnB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAACJ,MAAd,EAAsBI,CAAC,GAAG,CAACJ,MAAD,GAAUC,KAApC,EAA2CG,CAAC,EAA5C,EAAgD;AAC9CD,YAAAA,IAAI,CAACE,IAAL,CAAU;AAAEC,cAAAA,EAAE,EAAEF,CAAC,CAACG,QAAF,EAAN;AAAoBC,cAAAA,IAAI,iBAAUJ,CAAV;AAAxB,aAAV;AACD;;AACDK,UAAAA,OAAO,CAACC,GAAR,CAAY;AAAEP,YAAAA,IAAI,EAAJA;AAAF,WAAZ;AACA,iBAAO;AACLQ,YAAAA,IAAI,EAAE;AACJC,cAAAA,KAAK,EAAE,GADH;AAEJT,cAAAA,IAAI,EAAJA;AAFI;AADD,WAAP;AAMD;AACD;AACN;AACA;AACA;AACA;AACA;;AArB6E,OAA/D;AADa,KAAd;AAAA;AAHqB,CAAD,CAA1B;AA8BA,IAAQU,gBAAR,GAA6BrB,QAA7B,CAAQqB,gBAAR","sourcesContent":["import {\n  BaseQueryFn,\n  createApi,\n  fetchBaseQuery\n} from \"@reduxjs/toolkit/query/react\";\n\ninterface Result<T> {\n  total: number;\n  list: T[];\n}\n\nexport interface Song {\n  id: string;\n  name: string;\n}\n\nexport const songsApi = createApi({\n  reducerPath: \"songsApi\",\n  baseQuery: fetchBaseQuery({ baseUrl: \"http://avagap.test/api\" }),\n  endpoints: (builder) => ({\n    getSongs: builder.query<Result<Song>, { offset: number; limit: number }>({\n      //query: ({ offset, limit }) => `/v1/songs?offset=${offset}&limit=${limit}`\n      query: ({ offset, limit }) => `${offset}&${limit}`,\n      queryFn: ({ offset, limit }) => {\n        let list: Song[] = [];\n        for (let i = +offset; i < +offset + limit; i++) {\n          list.push({ id: i.toString(), name: `Song ${i}` });\n        }\n        console.log({ list });\n        return {\n          data: {\n            total: 100,\n            list\n          } as Result<Song>\n        };\n      }\n      /*\n      query: ({ offset, limit }) => ({\n        url: `/v1/Artist/5e5023646582e1286/tracks?maxSize=${limit}&offset=${offset}`,\n        headers: [[\"X-Api-Key\", \"4872bafc54269b2a7133705ab32c7e69\"]]\n      })\n      */\n    })\n  })\n});\n\nexport const { useGetSongsQuery } = songsApi;\n"]},"metadata":{},"sourceType":"module"}